"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[982],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>b});var a=t(67294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,s=function(e,r){if(null==e)return{};var t,a,s={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=a.createContext({}),d=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=d(e.components);return a.createElement(i.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},h=a.forwardRef((function(e,r){var t=e.components,s=e.mdxType,n=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(t),h=s,b=p["".concat(i,".").concat(h)]||p[h]||u[h]||n;return t?a.createElement(b,o(o({ref:r},c),{},{components:t})):a.createElement(b,o({ref:r},c))}));function b(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var n=t.length,o=new Array(n);o[0]=h;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[p]="string"==typeof e?e:s,o[1]=l;for(var d=2;d<n;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},63327:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var a=t(87462),s=(t(67294),t(3905));const n={sidebar_position:4},o="Classes",l={unversionedId:"classes",id:"classes",title:"Classes",description:"Heres a list of all the classes in the library and how they are used within the library.",source:"@site/docs/classes.md",sourceDirName:".",slug:"/classes",permalink:"/Leaderboard/docs/classes",draft:!1,editUrl:"https://github.com/arxkdev/Leaderboard/edit/main/docs/classes.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Examples",permalink:"/Leaderboard/docs/examples"}},i={},d=[{value:"<b>Class</b>: <code>Leaderboard</code>",id:"class-leaderboard",level:3},{value:"<b>Class</b>: <code>Board</code>",id:"class-board",level:3},{value:"<b>Class</b>: <code>MemoryShard</code>",id:"class-memoryshard",level:3}],c={toc:d},p="wrapper";function u(e){let{components:r,...t}=e;return(0,s.kt)(p,(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"classes"},"Classes"),(0,s.kt)("p",null,"Heres a list of all the classes in the library and how they are used within the library."),(0,s.kt)("h3",{id:"class-leaderboard"},(0,s.kt)("b",null,"Class"),": ",(0,s.kt)("inlineCode",{parentName:"h3"},"Leaderboard")),(0,s.kt)("p",null,"The leaderboard class is used to create a leaderboard object. This object is used to interact with the individual boards which are children of the leaderboard."),(0,s.kt)("h3",{id:"class-board"},(0,s.kt)("b",null,"Class"),": ",(0,s.kt)("inlineCode",{parentName:"h3"},"Board")),(0,s.kt)("p",null,"The board class is used to create a board. This board could etiher be (Hourly, Daily, Weekly, Monthly, Yearly, or All Time). This class interacts with the MemoryShard class to store the data using the ",(0,s.kt)("inlineCode",{parentName:"p"},"set")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"get")," methods."),(0,s.kt)("h3",{id:"class-memoryshard"},(0,s.kt)("b",null,"Class"),": ",(0,s.kt)("inlineCode",{parentName:"h3"},"MemoryShard")),(0,s.kt)("p",null,"The memory shard class is used to store individual MemoryMaps for each board. This is a recommended way as per the ",(0,s.kt)("a",{parentName:"p",href:"https://create.roblox.com/docs/cloud-services/memory-stores"},"MemoryStores")," page under the ",(0,s.kt)("inlineCode",{parentName:"p"},"Best practices")," tab. If you want to understand how this process works, please refer to the ",(0,s.kt)("a",{parentName:"p",href:"/Leaderboard/docs/features#sharding"},"Sharding")," section of the Features page."))}u.isMDXComponent=!0}}]);